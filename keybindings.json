[
  // Unused commands
  {
    "key": "cmd+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "cmd+numpad_add",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+numpad_subtract",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "cmd+k cmd+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  // Explorer
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "search.action.openResultToSide",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "enter",
    "command": "search.action.focusSearchList",
    "when": "hasSearchResult && searchViewletFocus"
  },
  // Editor
  {
    "key": "cmd+k h",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "cmd+k j",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k k",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "cmd+k l",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k i",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+m",
    "command": "editor.action.marker.nextInFiles",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+cmd+m",
    "command": "editor.action.marker.prevInFiles",
    "when": "editorFocus"
  },
  // Debug
  {
    "key": "cmd+; cmd+;",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
  },
  // Terminal
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // Git
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "l",
    "command": "list.selectAndPreserveFocus",
    "when": "listFocus && !inputFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "u",
    "command": "git.stage",
    "when": "listFocus && !inputFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "d",
    "command": "git.unstage",
    "when": "listFocus && !inputFocus && activeViewlet == 'workbench.view.scm'"
  },
  {
    "key": "shift+c",
    "command": "git.commitStaged",
    "when": "listFocus && !inputFocus && activeViewlet == 'workbench.view.scm'"
  }
]
